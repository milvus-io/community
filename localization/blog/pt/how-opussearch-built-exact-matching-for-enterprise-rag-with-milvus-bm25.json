{"codeList":["export function getExactMatchFields(): FieldType[] {\n return [\n   {\n     name: \"id\",\n     data_type: DataType.VarChar,\n     is_primary_key: true,\n     max_length: 100,\n   },\n   {\n     name: \"text\",\n     data_type: DataType.VarChar,\n     max_length: 1000,\n     enable_analyzer: true,\n     enable_match: true,  // This is the magic flag\n     analyzer_params: {\n       tokenizer: 'standard',\n       filter: [\n         'lowercase',\n         {\n           type: 'stemmer',\n           language: 'english',  // \"running\" matches \"run\"\n         },\n         {\n           type: 'stop',\n           stop_words: [],  // Keep ALL words (even \"the\", \"a\")\n         },\n       ],\n     },\n   },\n   {\n     name: \"sparse_vector\",\n     data_type: DataType.SparseFloatVector,\n   },\n ]\n}\n","export const FUNCTIONS: FunctionObject[] = [\n {\n   name: 'text_bm25_embedding',\n   type: FunctionType.BM25,\n   input_field_names: ['text'],\n   output_field_names: ['sparse_vector'],\n   params: {},\n },\n]\n","index_params: [\n {\n   field_name: 'sparse_vector',\n   index_type: 'SPARSE_INVERTED_INDEX',\n   metric_type: 'BM25',\n   params: {\n     inverted_index_algo: 'DAAT_MAXSCORE',\n     bm25_k1: 1.2,  // How much does term frequency matter?\n     bm25_b: 0.75,  // How much does document length matter?\n   },\n },\n],\n","await this.milvusClient.search({\n collection_name: 'my_collection',\n limit: 30,\n output_fields: ['id', 'text'],\n filter: `TEXT_MATCH(text, \"episode 281\")`,  // Exact match filter\n anns_field: 'sparse_vector',\n data: 'episode 281',  // BM25 ranking query\n})\n","filter: `TEXT_MATCH(text, \"foo\") and TEXT_MATCH(text, \"bar\")`\n","await this.milvusClient.createCollection({\n collection_name: collectionName,\n fields: fields,\n enable_dynamic_field: true,  // DO THIS\n // ... rest of config\n})\n","// In your Milvus configuration\nuse_mmap: true\n"],"headingContent":"","anchorList":[{"label":"O ponto cego da pesquisa semântica","href":"The-Semantic-Search-Blind-Spot","type":2,"isActive":false},{"label":"Porque é que nos preocupamos com a Pesquisa?","href":"Why-do-we-care-about-Search","type":2,"isActive":false},{"label":"Por que dobramos a aposta no Milvus (em vez de adicionar outro banco de dados)","href":"Why-We-Doubled-Down-on-Milvus-Instead-of-Adding-Another-Database","type":2,"isActive":false},{"label":"Arquitetura a 5000 pés","href":"Architecture-from-5000-feet","type":2,"isActive":false},{"label":"BM25 + filtragem = magia da correspondência exacta","href":"BM25-+-Filtering--Exact-Match-Magic","type":2,"isActive":false},{"label":"O código que o fez funcionar","href":"The-Code-That-Made-It-Work","type":2,"isActive":false},{"label":"Os erros que cometemos (para que não tenha de os cometer)","href":"The-Mistakes-We-Made-So-You-Don’t-Have-To","type":2,"isActive":false},{"label":"Impacto na produção e resultados","href":"Production-Impact-and-Results","type":2,"isActive":false},{"label":"O que vem a seguir?","href":"What’s-Next","type":2,"isActive":false}]}