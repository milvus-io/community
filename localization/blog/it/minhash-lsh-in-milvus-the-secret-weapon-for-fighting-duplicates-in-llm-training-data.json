{"codeList":["from datasketch import MinHash\n\ntext = \"example text for minhash signature\"\ntokens = text.lower().split()  # Step 1 & 2: preprocess + tokenize/shingle\nmh = MinHash(num_perm=128)     # Step 3: initialize MinHash\nfor token in tokens:\n    mh.update(token.encode('utf-8'))  # Add shingles to MinHash\nsignature = mh.hashvalues  # This is your MinHash signature (128-dimensional)\n","import numpy as np\nfrom pymilvus import MilvusClient\nfrom pymilvus import DataType\nMILVUS_URI = \"localhost:19530\"\nCOLLECTION_NAME = \"llm_data_dedup_minhash\"\nMINHASH_DIM = 128\nMINHASH_BIT_WIDTH = 64 # Assuming 64-bit hash values\n\n# Load data from NPY file\nbase = np.load('minhash_vectors.npy')\nids = [str(i) for i in range(base.shape[0])]  # Generate string IDs\n\nclient = MilvusClient(uri=MILVUS_URI)\n# Check and drop existing collection if needed\nif collection_name in client.list_collections():\n    print(f\"Collection {collection_name} exists, dropping it...\")\n    client.drop_collection(collection_name)\n# Create collection schema\nschema = MilvusClient.create_schema(\n    auto_id=False,\n    enable_dynamic_field=False,\n)\n\nschema.add_field(field_name=\"input_id\", datatype=DataType.INT64, is_primary=True)\nschema.add_field(field_name=\"minhash\", datatype=DataType.BINARY_VECTOR, dim=MINHASH_DIM * MINHASH_BIT_WIDTH)\nschema.add_field(field_name=\"id\", datatype=DataType.VARCHAR, max_length=200)\n","INDEX_FIELD_NAME = \"minhash_signature\"\n# Metric type, should be JACCARD for MinHash LSH\nMETRIC_TYPE = \"MHJACCARD\"\nINDEX_TYPE = \"MINHASH_LSH\"\nMINHASH_DIM = 128\nMINHASH_BIT_WIDTH = 64 # Assuming 64-bit hash values\n\nindex_params = MilvusClient.prepare_index_params()\n\nindex_params.add_index(\n    field_name=INDEX_FIELD_NAME,\n    index_type=INDEX_TYPE,\n    metric_type=METRIC_TYPE,\n    params={\n        # LSH-specific parameters might be configured here, e.g.:\n        # \"band\": 32, # Hypothetical parameter: number of bands\n        # \"element_bit_width\": 64 # Bit width of minhash values\n    }\n)\n# Create collection\nclient.create_collection(\n    collection_name=collection_name,\n    schema=schema,\n    index_params=index_params\n)\n","# Insert data in batches\nbatch_size = 2000\ntotal_records = base.shape[0]\nnum_batches = (total_records + batch_size - 1) // batch_size\n\nfor batch_idx in range(num_batches):\n    start = batch_idx * batch_size\n    end = min((batch_idx + 1) * batch_size, total_records)\n    \n    print(f\"Inserting batch {batch_idx + 1}/{num_batches} (records {start}-{end})\")\n    \n    # Prepare batch data\n    batch_data = [{\n        \"input_id\": i,\n        \"minhash\": base[i].tobytes(),\n        \"id\": ids[i]\n    } for i in range(start, end)]\n    \n    # Insert batch\n    client.insert(collection_name, batch_data)\n\nprint(\"Data insertion complete\")\n","# Perform search\nsearch_vectors = [vec.tobytes() for vec in base[:10]]\nresults = client.search(\n    collection_name, \n    data=search_vectors, \n    param={\"metric_type\": METRIC_TYPE, \"params\": search_params_lsh},\n    limit=1, \n    output_fields=[\"id\"])\n\nprint(\"\\nSearch results:\")\nfor i, result in enumerate(results):\n    print(f\"Query {i}:\")\n    for hit in result:\n        print(f\"  - ID: {hit['entity']['id']}, Distance: {hit['distance']}\")\n"],"headingContent":"","anchorList":[{"label":"Deduplicazione dei dati: Perché è importante per la formazione LLM","href":"Data-Deduplication-Why-It-Matters-for-LLM-Training","type":2,"isActive":false},{"label":"MinHash LSH: rilevare in modo efficiente i quasi duplicati in insiemi di dati di grandi dimensioni","href":"MinHash-LSH-Efficiently-Detecting-Near-Duplicates-in-Massive-Datasets","type":2,"isActive":false},{"label":"Integrazione di MinHash LSH in Milvus 2.6","href":"Integrating-MinHash-LSH-in-Milvus-26","type":2,"isActive":false},{"label":"Operazioni pratiche: deduplicazione di set di dati LLM con Milvus","href":"Hands-On-Deduplicating-LLM-Datasets-Using-Milvus","type":2,"isActive":false},{"label":"Conclusione","href":"Conclusion","type":2,"isActive":false},{"label":"Come iniziare con Milvus 2.6","href":"Getting-Started-with-Milvus-26","type":2,"isActive":false}]}