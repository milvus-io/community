{"codeList":["% cd /content/milvus/core\n!ls\n!./build.sh -t Release\n# To build GPU version, add -g option, and switch the notebook settings with GPU\n#((Edit -> Notebook settings -> select GPU))\n# !./build.sh -t Release -g\n","% cd /content/milvus/core/milvus\n! echo $LD_LIBRARY_PATH\nimport os\nos.environ['LD_LIBRARY_PATH'] +=\":/content/milvus/core/milvus/lib\"\n! echo $LD_LIBRARY_PATH\n","% cd scripts\n! ls\n! nohup ./start_server.sh &\n","! ls\n! cat nohup.out\n","# Connect to Milvus Server\nmilvus = Milvus(_HOST, _PORT)\n\n\n# Return the status of the Milvus server.\nserver_status = milvus.server_status(timeout=10)\n","# Information needed to create a collection\nparam={'collection_name':collection_name, 'dimension': _DIM, 'index_file_size': _INDEX_FILE_SIZE, 'metric_type': MetricType.L2}\n\n# Create a collection.\nmilvus.create_collection(param, timeout=10)\n\n# Create a partition for a collection.\nmilvus.create_partition(collection_name=collection_name, partition_tag=partition_tag, timeout=10)\nivf_param = {'nlist': 16384}\n\n# Create index for a collection.\nmilvus.create_index(collection_name=collection_name, index_type=IndexType.IVF_FLAT, params=ivf_param)\n","# Insert vectors to a collection.\nmilvus.insert(collection_name=collection_name, records=vectors, ids=ids)\n\n# Flush vector data in one collection or multiple collections to disk.\nmilvus.flush(collection_name_array=[collection_name], timeout=None)\n","# Load a collection for caching.\nmilvus.load_collection(collection_name=collection_name, timeout=None)\n\n# Search vectors in a collection.\nsearch_param = { \"nprobe\": 16 }\nmilvus.search(collection_name=collection_name,query_records=[vectors[0]],partition_tags=None,top_k=10,params=search_param)\n","# Return information of a collection.    milvus.get_collection_info(collection_name=collection_name, timeout=10)\n\n# Show index information of a collection.    milvus.get_index_info(collection_name=collection_name, timeout=10)\n","# List the ids in segment\n# you can get the segment_name list by get_collection_stats() function.\nmilvus.list_id_in_segment(collection_name =collection_name, segment_name='1600328539015368000', timeout=None)\n\n# Return raw vectors according to ids, and you can get the ids list by list_id_in_segment() function.\nmilvus.get_entity_by_id(collection_name=collection_name, ids=[0], timeout=None)\n","# Get Milvus configurations.    milvus.get_config(parent_key='cache', child_key='cache_size')\n\n# Set Milvus configurations.    milvus.set_config(parent_key='cache', child_key='cache_size', value='5G')\n","# Remove an index.    milvus.drop_index(collection_name=collection_name, timeout=None)\n\n# Delete vectors in a collection by vector ID.\n# id_array (list[int]) -- list of vector id    milvus.delete_entity_by_id(collection_name=collection_name, id_array=[0], timeout=None)\n\n# Delete a partition in a collection.    milvus.drop_partition(collection_name=collection_name, partition_tag=partition_tag, timeout=None)\n\n# Delete a collection by name.    milvus.drop_collection(collection_name=collection_name, timeout=10)\n"],"headingContent":"Set Up Milvus in Google Colaboratory for Easy ML Application Building","anchorList":[]}